Electron WP Optimization Steps

NOTE: Somewhat outdated

1- Skim the dataset of interest with a loose point e.g. HLT_Ele27_eta2p1_Cut1p0_Gsf_v1 of wp75_v16_nTuple.py
2- Use Matteo's code hltcode/HLTTest [1] to make the flat tuples
3- Reset the endPass() and barPass() of tunePlot.cxx to the loose point (line 23) and the tuples to be considered (line 223)
4- Set tunePlot.cxx to process the distribution of interest (line 677) and run it
5- Decide on a cut and edit the endPass and barPass() to include this cut
6- Repeat step 4 and 5 with the next distribution until all variables are covered
7- Include the set of cuts into a trigger config and run it to verify the final efficiencies make sense

[1] git clone https://github.com/matteosan1/hltcode

p/s: Matteo's code plot the original quantity (as in the thrRegular in the filters) so one needs to edit fillHist() (line 99) to handle this correctly
e.g if you want to draw H/E then line 105 should be 'varVal / eVal'

The mvaPlot code is similar to tunePlot but it now makes use of event weights and assumes the tree has been reduced e.g. by Matteo's reduceOptTree.C [2].

[2] https://github.com/matteosan1/optimizator
